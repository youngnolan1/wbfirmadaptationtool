pwr_se <- sqrt(diag(vcovHC(pwr, type = "HC1", cluster = ~reg_data$grid_id)))
# Investment in fixed assets (k4)
inv <- reg_model(reg_data, "InvestBinary", indep_climate_var)
inv_se <- sqrt(diag(vcovHC(inv, type = "HC1", cluster = ~reg_data$grid_id)))
# Note under regression results table changes depending on level or deviation
if (grepl("level", table_title)){
stargazer_note <- c("Each firm performance variable is regressed on the given climate variable, along with fixed effects (FE) which depend on data coverage. The climate variable is in levels - the local average in the FY of the relevant survey. We report standard errors clustered at the climate variable level (climate data grids) in parentheses.")
} else {
stargazer_note <- c("Each firm performance variable is regressed on the given climate variable, along with fixed effects (FE) which depend on data coverage. The climate variable is in deviations - the local average temperature in the FY of the relevant survey minus the local long-run mean, calculated for the 1980-2008 period. We report standard errors clustered at the climate variable level (climate data grids) in parentheses.")
}
# Generate the regression results table
sink(tempfile())
on.exit(sink(), add = TRUE)
stargazer(s, spw, w, e, capu, ei, pwr, inv,
type = html_or_tex,
se = c(list(s_se), list(spw_se), list(w_se), list(e_se), list(capu_se), list(ei_se), list(pwr_se), list(inv_se)),
out = directory,
title = paste0("Effect of ", table_title, " on Firm Performance"),
dep.var.labels = c("Sales (log)", "Productivity (log)", "Wages (log)",
"Employment (log)", "Capital Utilization (log)",
"Energy Intensity (log)", "Power Outages",
"Investment in Fixed Assets"),
omit.stat = c("f", "ser"),
align = TRUE,
no.space = TRUE,
notes = stargazer_note,
notes.align = "l")
}
# -------------------------- EXPORT FUNCTIONS ----------------------------------
#' @title Charts showing impact of climate variables on firm outcomes
#'
#' @description
#' The climate_on_firm_regs_charts() function exports charts showing results from the regressions of firm outcomes on climate variables.
#'
#' @import dplyr
#' @import ggplot2
#'
#' @param data Regression-ready dataset prepared by 1_prep_reg_data.
#' @param level_or_deviation Either "level" or "deviation"; indicates whether for the given climate variable, its survey year level or the deviation of this level from its long-run mean should be used.
#' @param output_directory Folder path for where charts will be saved.
#'
#' @return One chart for heat days, one for temperature, and one for temperature volatility saved in the output_directory.
#'
#' @note Remember to use forward slashes "/" in the folder path provided.
#'
#' @export
climate_on_firm_regs_charts <- function(data, level_or_deviation, output_directory){
# Define the climate variable based on the level_or_deviation argument
heat_days_var <- ifelse(level_or_deviation == "deviation", "HeatDaysDeviation", "HeatDays")
temp_var <- ifelse(level_or_deviation == "deviation", "TemperatureDeviation", "Temperature")
tempvol_var <- ifelse(level_or_deviation == "deviation", "TemperatureVolatilityDeviation", "TemperatureVolatility")
# Create the plots
hd_plot <- reg_chart(data, heat_days_var, paste0("Number of Heat Days (", level_or_deviation, ")"))
temp_plot <- reg_chart(data, temp_var, paste0("Temperature (", level_or_deviation, ")"))
tempvol_plot <- reg_chart(data, tempvol_var, paste0("Temperature Volatility (", level_or_deviation, ")"))
# Ensure the output directory exists
if (!dir.exists(output_directory)) {
dir.create(output_directory, recursive = TRUE)
}
# Define file paths for each plot
hd_plot_path <- file.path(output_directory, paste0("HeatDays_plot_", level_or_deviation, ".png"))
temp_plot_path <- file.path(output_directory, paste0("Temperature_plot_", level_or_deviation, ".png"))
tempvol_plot_path <- file.path(output_directory, paste0("TemperatureVolatility_plot_", level_or_deviation, ".png"))
# Save the plots
ggsave(hd_plot_path, plot = hd_plot, width = 12, height = 7, bg = "white")
ggsave(temp_plot_path, plot = temp_plot, width = 12, height = 7, bg = "white")
ggsave(tempvol_plot_path, plot = tempvol_plot, width = 12, height = 7, bg = "white")
}
#' @title Tables showing impact of climate variables on firm outcomes
#'
#' @description
#' The climate_on_firm_regs_tables() function exports tables showing results from the regressions of firm outcomes on climate variables.
#'
#' @import dplyr
#' @import sandwich
#' @import stargazer
#'
#' @param data Regression-ready dataset prepared by 1_prep_reg_data.
#' @param level_or_deviation Either "level" or "deviation"; indicates whether for the given climate variable, its survey year level or the deviation of this level from its long-run mean should be used.
#' @param html_or_tex Either "html" or "tex"; indicates whether table will be saved in .html or .tex format.
#' @param output_directory Folder path for where tables will be saved.
#'
#' @return One table for heat days, one for temperature, and one for temperature volatility saved in the output_directory.
#'
#' @note Remember to use forward slashes "/" in the folder path provided.
#'
#' @export
climate_on_firm_regs_tables <- function(data, level_or_deviation, html_or_tex, output_directory){
# Define the climate variable based on the level_or_deviation argument
heat_days_var <- ifelse(level_or_deviation == "deviation", "HeatDaysDeviation", "HeatDays")
temp_var <- ifelse(level_or_deviation == "deviation", "TemperatureDeviation", "Temperature")
tempvol_var <- ifelse(level_or_deviation == "deviation", "TemperatureVolatilityDeviation", "TemperatureVolatility")
# Create the tables
hd_table <- reg_table(data, heat_days_var, paste0("Number of Heat Days (", level_or_deviation, ")"), html_or_tex, paste0(output_directory, "/HeatDays_table_", level_or_deviation, ".", html_or_tex))
temp_table <- reg_table(data, temp_var, paste0("Temperature (", level_or_deviation, ")"), html_or_tex, paste0(output_directory, "/Temperature_table_", level_or_deviation, ".", html_or_tex))
tempvol_table <- reg_table(data, tempvol_var, paste0("Temperature Volatility (", level_or_deviation, ")"), html_or_tex, paste0(output_directory, "/TemperatureVolatility_table_", level_or_deviation, ".", html_or_tex))
}
climate_on_firm_regs_tables(mexico_survey, "deviation", "html", "C:/Users/young/OneDrive/Documents/test")
# Internal interaction regression function
interaction_reg <- function(reg_data, firm_outcome, climate_var, firm_characteristic){
# Initialize the base formula with the climate variable
formula_components <- c(climate_var*firm_characteristic)
# Conditionally add sector if there is more than one unique value
if(length(unique(reg_data$sector)) > 1) {
formula_components <- c(formula_components, "sector")
}
# Conditionally add countryname if there is more than one unique value
if(length(unique(reg_data$countryname)) > 1) {
formula_components <- c(formula_components, "countryname")
}
# Conditionally add year if there is more than one unique value
if(length(unique(reg_data$year)) > 1) {
formula_components <- c(formula_components, "as.factor(year)")
}
# Build the final formula dynamically
formula <- as.formula(paste(firm_outcome, " ~ ", paste(formula_components, collapse = " + ")))
# Run the regression
model <- lm(formula,
data = reg_data)
# Calculate clustered standard errors
se <- sqrt(diag(vcovHC(model, type = "HC1", cluster = ~reg_data$GridID)))
# Return both the model and the standard errors
return(list(model = model, se = se))
}
# -------------------------- EXPORT FUNCTIONS ----------------------------------
#' @title Table showing impact of the interaction between firm characteristics and climate variables on firm outcomes.
#'
#' @description
#' Exports a regression result table featuring interactions between the firm characteristics and climate variables provided.
#'
#' @import stargazer
#'
#' @param data Regression-ready dataset prepared by 1_prep_reg_data.
#' @param firm_outcome Dependent variable passed as a string, options include: "log(sales)", "log(sales_per_worker)", "log(wages)", "log(workers)", "log(capital_utilization)", "log(energy_intensity)", "power_outages", "invest_fixed_asset_dummy".
#' @param climate_var Independent climate variable passed as a string, options include: \cr
#' Levels - "heat_days", "temp", "tempvolatility" \cr
#' Deviations - "heat_days_deviation", "temp_deviation", "tempvolatility_deviation" \cr
#' @param level_or_deviation Either "level" or "deviation"; indicates whether for the given climate variable, its survey year level or the deviation of this level from its long-run mean should be used.
#' @param firm_characteristics Independent firm characteristic/policy variable passed as a string or list of strings, options include: \cr
#' Basic characteristics: "region", "young", "small", "market_served" \cr
#' Business environment: "obstacle_accesstofinance", "obstacle_businesslicensing", "obstacle_corruption", "obstacle_traderegulations", "obstacle_laborregulations", "freq_meetings_tax_officials", "pcnt_time_dealing_regulations", "total_annual_informal_payments" \cr
#' Banking: "checking_savings_account", "overdraft_facility", "financial_inst_credit" \cr
#' Infrastructure: "length_power_outage", "pcnt_sales_losses_dueto_power_outages", "freq_water_shortages", "length_water_shortages", "obstacle_electricity", "obstacle_transport", "insufficient_water_supply" \cr
#' Supply chains: "inputs_domestic" \cr
#' Management: "manager_experience_yrs", "top_manager_female" \cr
#' @param html_or_tex Either "html" or "tex"; indicates whether the table will be saved in .html or .tex format.
#' @param output_directory File path for where the table will be saved, ending in .html e.g. "C:/Users/Nolan/Project/table.html".
#'
#' @return Regression results table for the variables provided saved in the output_directory.
#'
#' @note Remember to use forward slashes "/" in the folder path.
#'
#' @export
interaction_reg_table <- function(reg_data, firm_outcome, climate_var, firm_characteristics, html_or_tex, output_directory){
# Define climate var - if Level, leave as is; if Deviation, append Deviation to climate_var name
climate_var <- ifelse(level_or_deviation == "Level", climate_var, paste0(climate_var, "Deviation"))
# Initialize empty lists for models and standard errors
models <- list()  # Store the models
ses <- list()     # Store the clustered standard errors
# Loop through firm characteristics, run interaction_reg, and store model and SE
for (characteristic in firm_characteristics) {
# Run the interaction regression for each characteristic
result <- interaction_reg(reg_data, firm_outcome, climate_var, characteristic)
# Extract the model and standard errors from the result
models[[characteristic]] <- result$model
ses[[characteristic]] <- result$se
}
# Use stargazer to combine all models into a results table with clustered SEs
sink(tempfile())  # Prevent direct output
on.exit(sink(), add = TRUE)  # Ensure sink is turned off on exit
stargazer(models,
type = html_or_tex,
se = ses,  # Pass the list of standard errors to stargazer
title = paste0("Regression Results - Interactions (", reg_data$country, ")"),
out = output_directory,
omit.stat = c("f", "ser"),  # Customize which statistics to omit
align = TRUE,  # Align columns for better readability
no.space = TRUE,  # Eliminate extra spaces between lines
notes = c("Clustered standard errors at the grid level"))
}
# Script 4
interaction_reg_table(mexico_survey, "SalesLog", "HeatDays", "Deviation", c("Young", "Small"), "html",
"C:/Users/young/OneDrive/Documents/test")
#' Supply chains: "inputs_domestic" \cr
#' Management: "manager_experience_yrs", "top_manager_female" \cr
#' @param html_or_tex Either "html" or "tex"; indicates whether the table will be saved in .html or .tex format.
#' @param output_directory File path for where the table will be saved, ending in .html e.g. "C:/Users/Nolan/Project/table.html".
#'
#' @return Regression results table for the variables provided saved in the output_directory.
#'
#' @note Remember to use forward slashes "/" in the folder path.
#'
#' @export
interaction_reg_table <- function(reg_data, firm_outcome, climate_var, level_or_deviation, firm_characteristics, html_or_tex, output_directory){
# Define climate var - if Level, leave as is; if Deviation, append Deviation to climate_var name
climate_var <- ifelse(level_or_deviation == "Level", climate_var, paste0(climate_var, "Deviation"))
# Initialize empty lists for models and standard errors
models <- list()  # Store the models
ses <- list()     # Store the clustered standard errors
# Loop through firm characteristics, run interaction_reg, and store model and SE
for (characteristic in firm_characteristics) {
# Run the interaction regression for each characteristic
result <- interaction_reg(reg_data, firm_outcome, climate_var, characteristic)
# Extract the model and standard errors from the result
models[[characteristic]] <- result$model
ses[[characteristic]] <- result$se
}
# Use stargazer to combine all models into a results table with clustered SEs
sink(tempfile())  # Prevent direct output
on.exit(sink(), add = TRUE)  # Ensure sink is turned off on exit
stargazer(models,
type = html_or_tex,
se = ses,  # Pass the list of standard errors to stargazer
title = paste0("Regression Results - Interactions (", reg_data$country, ")"),
out = output_directory,
omit.stat = c("f", "ser"),  # Customize which statistics to omit
align = TRUE,  # Align columns for better readability
no.space = TRUE,  # Eliminate extra spaces between lines
notes = c("Clustered standard errors at the grid level"))
}
# Script 4
interaction_reg_table(mexico_survey, "SalesLog", "HeatDays", "Deviation", c("Young", "Small"), "html",
"C:/Users/young/OneDrive/Documents/test")
# Internal interaction regression function
interaction_reg <- function(reg_data, firm_outcome, climate_var, firm_characteristic){
# Create interaction term as a string
interaction_term <- paste(climate_var, "*", firm_characteristic)
# Initialize the base formula with the climate variable and the firm characteristic interaction
formula_components <- c(interaction_term)
# Conditionally add sector if there is more than one unique value
if(length(unique(reg_data$sector)) > 1) {
formula_components <- c(formula_components, "sector")
}
# Conditionally add countryname if there is more than one unique value
if(length(unique(reg_data$countryname)) > 1) {
formula_components <- c(formula_components, "countryname")
}
# Conditionally add year if there is more than one unique value
if(length(unique(reg_data$year)) > 1) {
formula_components <- c(formula_components, "as.factor(year)")
}
# Build the final formula dynamically
formula <- as.formula(paste(firm_outcome, " ~ ", paste(formula_components, collapse = " + ")))
# Run the regression
model <- lm(formula,
data = reg_data)
# Calculate clustered standard errors
se <- sqrt(diag(vcovHC(model, type = "HC1", cluster = ~reg_data$GridID)))
# Return both the model and the standard errors
return(list(model = model, se = se))
}
#' Supply chains: "inputs_domestic" \cr
#' Management: "manager_experience_yrs", "top_manager_female" \cr
#' @param html_or_tex Either "html" or "tex"; indicates whether the table will be saved in .html or .tex format.
#' @param output_directory File path for where the table will be saved, ending in .html e.g. "C:/Users/Nolan/Project/table.html".
#'
#' @return Regression results table for the variables provided saved in the output_directory.
#'
#' @note Remember to use forward slashes "/" in the folder path.
#'
#' @export
interaction_reg_table <- function(reg_data, firm_outcome, climate_var, level_or_deviation, firm_characteristics, html_or_tex, output_directory){
# Define climate var - if Level, leave as is; if Deviation, append Deviation to climate_var name
climate_var <- ifelse(level_or_deviation == "Level", climate_var, paste0(climate_var, "Deviation"))
# Initialize empty lists for models and standard errors
models <- list()  # Store the models
ses <- list()     # Store the clustered standard errors
# Loop through firm characteristics, run interaction_reg, and store model and SE
for (characteristic in firm_characteristics) {
# Run the interaction regression for each characteristic
result <- interaction_reg(reg_data, firm_outcome, climate_var, characteristic)
# Extract the model and standard errors from the result
models[[characteristic]] <- result$model
ses[[characteristic]] <- result$se
}
# Use stargazer to combine all models into a results table with clustered SEs
sink(tempfile())  # Prevent direct output
on.exit(sink(), add = TRUE)  # Ensure sink is turned off on exit
stargazer(models,
type = html_or_tex,
se = ses,  # Pass the list of standard errors to stargazer
title = paste0("Regression Results - Interactions (", reg_data$country, ")"),
out = output_directory,
omit.stat = c("f", "ser"),  # Customize which statistics to omit
align = TRUE,  # Align columns for better readability
no.space = TRUE,  # Eliminate extra spaces between lines
notes = c("Clustered standard errors at the grid level"))
}
# Script 4
interaction_reg_table(mexico_survey, "SalesLog", "HeatDays", "Deviation", c("Young", "Small"), "html",
"C:/Users/young/OneDrive/Documents/test")
# Internal interaction regression function
interaction_reg <- function(reg_data, firm_outcome, climate_var, firm_characteristic){
# Create interaction term as a string
interaction_term <- paste(climate_var, "*", firm_characteristic)
# Initialize the base formula with the climate variable and the firm characteristic interaction
formula_components <- c(interaction_term)
# Conditionally add sector if there is more than one unique value
if(length(unique(reg_data$sector)) > 1) {
formula_components <- c(formula_components, "sector")
}
# Conditionally add countryname if there is more than one unique value
if(length(unique(reg_data$countryname)) > 1) {
formula_components <- c(formula_components, "countryname")
}
# Conditionally add year if there is more than one unique value
if(length(unique(reg_data$year)) > 1) {
formula_components <- c(formula_components, "as.factor(year)")
}
# Build the final formula dynamically
formula <- as.formula(paste(firm_outcome, " ~ ", paste(formula_components, collapse = " + ")))
# Run the regression
model <- lm(formula,
data = reg_data)
# Calculate clustered standard errors
se <- sqrt(diag(vcovHC(model, type = "HC1", cluster = ~reg_data$GridID)))
# Return both the model and the standard errors
return(list(model = model, se = se))
}
# -------------------------- EXPORT FUNCTIONS ----------------------------------
#' @title Table showing impact of the interaction between firm characteristics and climate variables on firm outcomes.
#'
#' @description
#' Exports a regression result table featuring interactions between the firm characteristics and climate variables provided.
#'
#' @import stargazer
#'
#' @param data Regression-ready dataset prepared by 1_prep_reg_data.
#' @param firm_outcome Dependent variable passed as a string, options include: "log(sales)", "log(sales_per_worker)", "log(wages)", "log(workers)", "log(capital_utilization)", "log(energy_intensity)", "power_outages", "invest_fixed_asset_dummy".
#' @param climate_var Independent climate variable passed as a string, options include: \cr
#' Levels - "heat_days", "temp", "tempvolatility" \cr
#' Deviations - "heat_days_deviation", "temp_deviation", "tempvolatility_deviation" \cr
#' @param level_or_deviation Either "level" or "deviation"; indicates whether for the given climate variable, its survey year level or the deviation of this level from its long-run mean should be used.
#' @param firm_characteristics Independent firm characteristic/policy variable passed as a string or list of strings, options include: \cr
#' Basic characteristics: "region", "young", "small", "market_served" \cr
#' Business environment: "obstacle_accesstofinance", "obstacle_businesslicensing", "obstacle_corruption", "obstacle_traderegulations", "obstacle_laborregulations", "freq_meetings_tax_officials", "pcnt_time_dealing_regulations", "total_annual_informal_payments" \cr
#' Banking: "checking_savings_account", "overdraft_facility", "financial_inst_credit" \cr
#' Infrastructure: "length_power_outage", "pcnt_sales_losses_dueto_power_outages", "freq_water_shortages", "length_water_shortages", "obstacle_electricity", "obstacle_transport", "insufficient_water_supply" \cr
#' Supply chains: "inputs_domestic" \cr
#' Management: "manager_experience_yrs", "top_manager_female" \cr
#' @param html_or_tex Either "html" or "tex"; indicates whether the table will be saved in .html or .tex format.
#' @param output_directory File path for where the table will be saved, ending in .html e.g. "C:/Users/Nolan/Project/table.html".
#'
#' @return Regression results table for the variables provided saved in the output_directory.
#'
#' @note Remember to use forward slashes "/" in the folder path.
#'
#' @export
interaction_reg_table <- function(reg_data, firm_outcome, climate_var, level_or_deviation, firm_characteristics, html_or_tex, output_directory){
# Define climate var - if Level, leave as is; if Deviation, append Deviation to climate_var name
climate_var <- ifelse(level_or_deviation == "Level", climate_var, paste0(climate_var, "Deviation"))
# Initialize empty lists for models and standard errors
models <- list()  # Store the models
ses <- list()     # Store the clustered standard errors
# Loop through firm characteristics, run interaction_reg, and store model and SE
for (characteristic in firm_characteristics) {
# Run the interaction regression for each characteristic
result <- interaction_reg(reg_data, firm_outcome, climate_var, characteristic)
# Extract the model and standard errors from the result
models[[characteristic]] <- result$model
ses[[characteristic]] <- result$se
}
# Adjust output file name based on type
file_extension <- ifelse(html_or_tex == "html", ".html", ".tex")
output_path <- paste0(output_directory, file_extension)
# Use stargazer to combine all models into a results table with clustered SEs
sink(tempfile())  # Prevent direct output
on.exit(sink(), add = TRUE)  # Ensure sink is turned off on exit
stargazer(models,
type = html_or_tex,
se = ses,  # Pass the list of standard errors to stargazer
title = paste0("Regression Results - Interactions (", reg_data$country, ")"),
out = output_directory,
omit.stat = c("f", "ser"),  # Customize which statistics to omit
align = TRUE,  # Align columns for better readability
no.space = TRUE,  # Eliminate extra spaces between lines
notes = c("Clustered standard errors at the grid level"))
}
# Script 4
interaction_reg_table(mexico_survey, "SalesLog", "HeatDays", "Deviation", c("Young", "Small"), "html",
"C:/Users/young/OneDrive/Documents/test")
#' Supply chains: "inputs_domestic" \cr
#' Management: "manager_experience_yrs", "top_manager_female" \cr
#' @param html_or_tex Either "html" or "tex"; indicates whether the table will be saved in .html or .tex format.
#' @param output_directory File path for where the table will be saved, ending in .html e.g. "C:/Users/Nolan/Project/table.html".
#'
#' @return Regression results table for the variables provided saved in the output_directory.
#'
#' @note Remember to use forward slashes "/" in the folder path.
#'
#' @export
interaction_reg_table <- function(reg_data, firm_outcome, climate_var, level_or_deviation, firm_characteristics, html_or_tex, output_directory){
# Define climate var - if Level, leave as is; if Deviation, append Deviation to climate_var name
climate_var <- ifelse(level_or_deviation == "Level", climate_var, paste0(climate_var, "Deviation"))
# Initialize empty lists for models and standard errors
models <- list()  # Store the models
ses <- list()     # Store the clustered standard errors
# Loop through firm characteristics, run interaction_reg, and store model and SE
for (characteristic in firm_characteristics) {
# Run the interaction regression for each characteristic
result <- interaction_reg(reg_data, firm_outcome, climate_var, characteristic)
# Extract the model and standard errors from the result
models[[characteristic]] <- result$model
ses[[characteristic]] <- result$se
}
# Adjust output file name based on type
file_extension <- ifelse(html_or_tex == "html", ".html", ".tex")
output_path <- paste0(output_directory, file_extension)
# Use stargazer to combine all models into a results table with clustered SEs
sink(tempfile())  # Prevent direct output
on.exit(sink(), add = TRUE)  # Ensure sink is turned off on exit
stargazer(models,
type = html_or_tex,
se = ses,  # Pass the list of standard errors to stargazer
title = paste0("Regression Results - Interactions (", reg_data$country, ")"),
out = output_path,
omit.stat = c("f", "ser"),  # Customize which statistics to omit
align = TRUE,  # Align columns for better readability
no.space = TRUE,  # Eliminate extra spaces between lines
notes = c("Clustered standard errors at the grid level"))
}
# Script 4
interaction_reg_table(mexico_survey, "SalesLog", "HeatDays", "Deviation", c("Young", "Small"), "html",
"C:/Users/young/OneDrive/Documents/test")
#' Management: "manager_experience_yrs", "top_manager_female" \cr
#' @param html_or_tex Either "html" or "tex"; indicates whether the table will be saved in .html or .tex format.
#' @param filename Name of the file to be saved, excluding the file extension.
#' @param output_directory File path for where the table will be saved, ending in .html e.g. "C:/Users/Nolan/Project/table.html".
#'
#' @return Regression results table for the variables provided saved in the output_directory.
#'
#' @note Remember to use forward slashes "/" in the folder path.
#'
#' @export
interaction_reg_table <- function(reg_data, firm_outcome, climate_var, level_or_deviation, firm_characteristics, html_or_tex, filename, output_directory){
# Define climate var - if Level, leave as is; if Deviation, append Deviation to climate_var name
climate_var <- ifelse(level_or_deviation == "Level", climate_var, paste0(climate_var, "Deviation"))
# Initialize empty lists for models and standard errors
models <- list()  # Store the models
ses <- list()     # Store the clustered standard errors
# Loop through firm characteristics, run interaction_reg, and store model and SE
for (characteristic in firm_characteristics) {
# Run the interaction regression for each characteristic
result <- interaction_reg(reg_data, firm_outcome, climate_var, characteristic)
# Extract the model and standard errors from the result
models[[characteristic]] <- result$model
ses[[characteristic]] <- result$se
}
# Adjust output file name based on type
file_extension <- ifelse(html_or_tex == "html", ".html", ".tex")
output_path <- paste0(output_directory, filename, file_extension)
# Use stargazer to combine all models into a results table with clustered SEs
sink(tempfile())  # Prevent direct output
on.exit(sink(), add = TRUE)  # Ensure sink is turned off on exit
stargazer(models,
type = html_or_tex,
se = ses,  # Pass the list of standard errors to stargazer
title = paste0("Regression Results - Interactions (", reg_data$country, ")"),
out = output_path,
omit.stat = c("f", "ser"),  # Customize which statistics to omit
align = TRUE,  # Align columns for better readability
no.space = TRUE,  # Eliminate extra spaces between lines
notes = c("Clustered standard errors at the grid level"))
}
# Script 4
interaction_reg_table(mexico_survey, "SalesLog", "HeatDays", "Deviation", c("Young", "Small"), "html",
"TestTable", "C:/Users/young/OneDrive/Documents/test")
# Script 4
interaction_reg_table(mexico_survey, "SalesLog", "HeatDays", "Deviation", c("Young", "Small"), "html",
"TestTable", "C:/Users/young/OneDrive/Documents/test/")
#' Management: "manager_experience_yrs", "top_manager_female" \cr
#' @param html_or_tex Either "html" or "tex"; indicates whether the table will be saved in .html or .tex format.
#' @param filename Name of the file to be saved, excluding the file extension.
#' @param output_directory File path for where the table will be saved, ending in .html e.g. "C:/Users/Nolan/Project/table.html".
#'
#' @return Regression results table for the variables provided saved in the output_directory.
#'
#' @note Remember to use forward slashes "/" in the folder path.
#'
#' @export
interaction_reg_table <- function(reg_data, firm_outcome, climate_var, level_or_deviation, firm_characteristics, html_or_tex, filename, output_directory){
# Define climate var - if Level, leave as is; if Deviation, append Deviation to climate_var name
climate_var <- ifelse(level_or_deviation == "Level", climate_var, paste0(climate_var, "Deviation"))
# Initialize empty lists for models and standard errors
models <- list()  # Store the models
ses <- list()     # Store the clustered standard errors
# Loop through firm characteristics, run interaction_reg, and store model and SE
for (characteristic in firm_characteristics) {
# Run the interaction regression for each characteristic
result <- interaction_reg(reg_data, firm_outcome, climate_var, characteristic)
# Extract the model and standard errors from the result
models[[characteristic]] <- result$model
ses[[characteristic]] <- result$se
}
# Adjust output file name based on type
output_path <- paste0(output_directory, "/", filename, ".", html_or_tex)
# Use stargazer to combine all models into a results table with clustered SEs
sink(tempfile())  # Prevent direct output
on.exit(sink(), add = TRUE)  # Ensure sink is turned off on exit
stargazer(models,
type = html_or_tex,
se = ses,  # Pass the list of standard errors to stargazer
title = paste0("Regression Results - Interactions (", reg_data$country, ")"),
out = output_path,
omit.stat = c("f", "ser"),  # Customize which statistics to omit
align = TRUE,  # Align columns for better readability
no.space = TRUE,  # Eliminate extra spaces between lines
notes = c("Clustered standard errors at the grid level"))
}
# Script 4
interaction_reg_table(mexico_survey, "SalesLog", "HeatDays", "Deviation", c("Young", "Small"), "html",
"TestTable", "C:/Users/young/OneDrive/Documents/test")
