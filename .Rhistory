graph_data <- data.frame(
firm_outcome = character(),
coefficient = numeric(),
lower_ci = numeric(),
upper_ci = numeric()
)
for (outcome in logged_firm_outcomes) {
# Remove NAs
reg_data[[outcome]] <- ifelse(reg_data[[outcome]] == 0, NA, reg_data[[outcome]])
reg_data_final <- reg_data[complete.cases(reg_data[[outcome]]), ]
# Build the formula: firm_performance = climate_var + sector
formula <- as.formula(paste("log(", outcome, ") ~ ", indep_climate_var, " + sector"))
# Run the regression
model <- lm(formula,
data = reg_data_final,
weights = wt)
# Extract coefficient and CI
results <- data.frame(firm_outcome = outcome,
coefficient = coefficients(model)[indep_climate_var],
lower_ci = confint(model)[indep_climate_var, 1],
upper_ci = confint(model)[indep_climate_var, 2])
graph_data <- rbind(graph_data, results)
}
for (outcome in not_logged_firm_outcomes) {
# Remove NAs
reg_data_final <- reg_data[complete.cases(reg_data[[outcome]]), ]
# Build the formula: firm_performance = climate_var + sector
formula <- as.formula(paste(outcome, " ~ ", indep_climate_var, " + sector"))
# Run the regression
model <- lm(formula,
data = reg_data_final,
weights = wt)
# Extract coefficient and CI
results <- data.frame(firm_outcome = outcome,
coefficient = coefficients(model)[indep_climate_var],
lower_ci = confint(model)[indep_climate_var, 1],
upper_ci = confint(model)[indep_climate_var, 2])
graph_data <- rbind(graph_data, results)
}
plot <- ggplot(graph_data, aes(x = firm_outcome, y = coefficient)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2, color = "black") +
labs(y = "Regression Coefficient", title = paste0("Impact of ",  plot_title, " on Firm Outcomes")) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size = 12)
plot.title = element_text(hjust = 0.5))
#' This function produces charts showing results from the regressions of firm outcomes on climate variables.
#' @param data Regression-ready dataset prepared by 1_prep_reg_data.
#' @return One chart for heat days, one for temperature, and one for temperature volatility.
#' @export
climate_on_firm_regs <- function(data, output_directory){
hd_plot <- reg_chart_function(data, "heat_days_deviation", "Heat Days")
temp_plot <- reg_chart_function(data, "temp_deviation", "Temperature")
tempvol_plot <- reg_chart_function(data, "tempvolatility_deviation", "Temperature Volatility")
# Ensure the output directory exists
if (!dir.exists(output_directory)) {
dir.create(output_directory, recursive = TRUE)
}
# Define file paths for each plot
hd_plot_path <- file.path(output_directory, "heat_days_plot.png")
temp_plot_path <- file.path(output_directory, "temperature_plot.png")
tempvol_plot_path <- file.path(output_directory, "temperature_volatility_plot.png")
# Save the plots
ggsave(hd_plot_path, plot = hd_plot, width = 12, height = 7, bg = "white")
ggsave(temp_plot_path, plot = temp_plot, width = 12, height = 7, bg = "white")
ggsave(tempvol_plot_path, plot = tempvol_plot, width = 12, height = 7, bg = "white")
}
climate_on_firm_regs(reg_master, "C:/Users/young/OneDrive/Documents/HomeVidsPhotos")
# Internal regression function which takes the independent climate var as argument, and
# loops through the firm outcomes.
reg_chart_function <- function(reg_data, indep_climate_var, plot_title){
# Firm outcomes
logged_firm_outcomes <- c("sales", "sales_per_worker", "wages", "workers",
"capital_utilization", "energy_intensity")
not_logged_firm_outcomes <- c("power_outages", "invest_fixed_assets_dummy")
# Empty dataframe for results
graph_data <- data.frame(
firm_outcome = character(),
coefficient = numeric(),
lower_ci = numeric(),
upper_ci = numeric()
)
for (outcome in logged_firm_outcomes) {
# Remove NAs
reg_data[[outcome]] <- ifelse(reg_data[[outcome]] == 0, NA, reg_data[[outcome]])
reg_data_final <- reg_data[complete.cases(reg_data[[outcome]]), ]
# Build the formula: firm_performance = climate_var + sector
formula <- as.formula(paste("log(", outcome, ") ~ ", indep_climate_var, " + sector"))
# Run the regression
model <- lm(formula,
data = reg_data_final,
weights = wt)
# Extract coefficient and CI
results <- data.frame(firm_outcome = outcome,
coefficient = coefficients(model)[indep_climate_var],
lower_ci = confint(model)[indep_climate_var, 1],
upper_ci = confint(model)[indep_climate_var, 2])
graph_data <- rbind(graph_data, results)
}
for (outcome in not_logged_firm_outcomes) {
# Remove NAs
reg_data_final <- reg_data[complete.cases(reg_data[[outcome]]), ]
# Build the formula: firm_performance = climate_var + sector
formula <- as.formula(paste(outcome, " ~ ", indep_climate_var, " + sector"))
# Run the regression
model <- lm(formula,
data = reg_data_final,
weights = wt)
# Extract coefficient and CI
results <- data.frame(firm_outcome = outcome,
coefficient = coefficients(model)[indep_climate_var],
lower_ci = confint(model)[indep_climate_var, 1],
upper_ci = confint(model)[indep_climate_var, 2])
graph_data <- rbind(graph_data, results)
}
plot <- ggplot(graph_data, aes(x = firm_outcome, y = coefficient)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2, color = "black") +
labs(y = "Regression Coefficient", title = paste0("Impact of ",  plot_title, " on Firm Outcomes")) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5))
return(plot)
}
#' This function produces charts showing results from the regressions of firm outcomes on climate variables.
#' @param data Regression-ready dataset prepared by 1_prep_reg_data.
#' @return One chart for heat days, one for temperature, and one for temperature volatility.
#' @export
climate_on_firm_regs <- function(data, output_directory){
hd_plot <- reg_chart_function(data, "heat_days_deviation", "Heat Days")
temp_plot <- reg_chart_function(data, "temp_deviation", "Temperature")
tempvol_plot <- reg_chart_function(data, "tempvolatility_deviation", "Temperature Volatility")
# Ensure the output directory exists
if (!dir.exists(output_directory)) {
dir.create(output_directory, recursive = TRUE)
}
# Define file paths for each plot
hd_plot_path <- file.path(output_directory, "heat_days_plot.png")
temp_plot_path <- file.path(output_directory, "temperature_plot.png")
tempvol_plot_path <- file.path(output_directory, "temperature_volatility_plot.png")
# Save the plots
ggsave(hd_plot_path, plot = hd_plot, width = 12, height = 7, bg = "white")
ggsave(temp_plot_path, plot = temp_plot, width = 12, height = 7, bg = "white")
ggsave(tempvol_plot_path, plot = tempvol_plot, width = 12, height = 7, bg = "white")
}
climate_on_firm_regs(reg_master, "C:/Users/young/OneDrive/Documents/HomeVidsPhotos")
# Internal regression function (logged outcome)
reg_model_logged <- function(reg_data, outcome, indep_climate_var){
# Remove NAs
reg_data[[outcome]] <- ifelse(reg_data[[outcome]] == 0, NA, reg_data[[outcome]])
reg_data_final <- reg_data[complete.cases(reg_data[[outcome]]), ]
# Build the formula: firm_performance = climate_var + sector
formula <- as.formula(paste("log(", outcome, ") ~ ", indep_climate_var, " + sector"))
# Run the regression
model <- lm(formula,
data = reg_data_final,
weights = wt)
return(model)
}
# Internal regression function (outcome not logged)
reg_model_not_logged <- function(reg_data, outcome, indep_climate_var){
reg_data_final <- reg_data[complete.cases(reg_data[[outcome]]), ]
# Build the formula: firm_performance = climate_var + sector
formula <- as.formula(paste(outcome, " ~ ", indep_climate_var, " + sector"))
# Run the regression
model <- lm(formula,
data = reg_data_final,
weights = wt)
return(model)
}
# Internal summary chart function
reg_chart <- function(reg_data, indep_climate_var, plot_title){
# Firm outcomes
logged_firm_outcomes <- c("sales", "sales_per_worker", "wages", "workers",
"capital_utilization", "energy_intensity")
not_logged_firm_outcomes <- c("power_outages", "invest_fixed_assets_dummy")
# Empty dataframe for results
graph_data <- data.frame(
firm_outcome = character(),
coefficient = numeric(),
lower_ci = numeric(),
upper_ci = numeric()
)
for (outcome in logged_firm_outcomes) {
model <- reg_model_logged(reg_data, outcome, indep_climate_var)
# Extract coefficient and CI
results <- data.frame(firm_outcome = outcome,
coefficient = coefficients(model)[indep_climate_var],
lower_ci = confint(model)[indep_climate_var, 1],
upper_ci = confint(model)[indep_climate_var, 2])
graph_data <- rbind(graph_data, results)
}
for (outcome in not_logged_firm_outcomes) {
model <- reg_model_not_logged(reg_data, outcome, indep_climate_var)
# Extract coefficient and CI
results <- data.frame(firm_outcome = outcome,
coefficient = coefficients(model)[indep_climate_var],
lower_ci = confint(model)[indep_climate_var, 1],
upper_ci = confint(model)[indep_climate_var, 2])
graph_data <- rbind(graph_data, results)
}
plot <- ggplot(graph_data, aes(x = firm_outcome, y = coefficient)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2, color = "black") +
labs(y = "Regression Coefficient", title = paste0("Impact of ",  plot_title, " on Firm Outcomes")) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 14))
return(plot)
}
reg_chart(reg_master, "heat_days_deviation", "Heat Days")
# Internal regression function (logged outcome)
reg_model_logged <- function(reg_data, outcome, indep_climate_var){
# Remove NAs
reg_data[[outcome]] <- ifelse(reg_data[[outcome]] == 0, NA, reg_data[[outcome]])
reg_data_final <- reg_data[complete.cases(reg_data[[outcome]]), ]
# Build the formula: firm_performance = climate_var + sector
formula <- as.formula(paste("log(", outcome, ") ~ ", indep_climate_var, " + sector"))
# Run the regression
model <- lm(formula,
data = reg_data_final,
weights = wt)
return(model)
}
# Internal regression function (outcome not logged)
reg_model_not_logged <- function(reg_data, outcome, indep_climate_var){
reg_data_final <- reg_data[complete.cases(reg_data[[outcome]]), ]
# Build the formula: firm_performance = climate_var + sector
formula <- as.formula(paste(outcome, " ~ ", indep_climate_var, " + sector"))
# Run the regression
model <- lm(formula,
data = reg_data_final,
weights = wt)
return(model)
}
# Internal summary chart function
reg_chart <- function(reg_data, indep_climate_var, plot_title){
# Firm outcomes
logged_firm_outcomes <- c("sales", "sales_per_worker", "wages", "workers",
"capital_utilization", "energy_intensity")
not_logged_firm_outcomes <- c("power_outages", "invest_fixed_assets_dummy")
# Empty dataframe for results
graph_data <- data.frame(
firm_outcome = character(),
coefficient = numeric(),
lower_ci = numeric(),
upper_ci = numeric()
)
for (outcome in logged_firm_outcomes) {
model <- reg_model_logged(reg_data, outcome, indep_climate_var)
# Extract coefficient and CI
results <- data.frame(firm_outcome = outcome,
coefficient = coefficients(model)[indep_climate_var],
lower_ci = confint(model)[indep_climate_var, 1],
upper_ci = confint(model)[indep_climate_var, 2])
graph_data <- rbind(graph_data, results)
}
for (outcome in not_logged_firm_outcomes) {
model <- reg_model_not_logged(reg_data, outcome, indep_climate_var)
# Extract coefficient and CI
results <- data.frame(firm_outcome = outcome,
coefficient = coefficients(model)[indep_climate_var],
lower_ci = confint(model)[indep_climate_var, 1],
upper_ci = confint(model)[indep_climate_var, 2])
graph_data <- rbind(graph_data, results)
}
plot <- ggplot(graph_data, aes(x = firm_outcome, y = coefficient)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2, color = "black") +
labs(y = "Regression Coefficient", title = paste0("Effect of Deviation in ",  plot_title, " from Long-Run Mean on Firm Outcomes")) +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 14))
return(plot)
}
# Internal results table function
reg_table <- function(reg_data, indep_climate_var, table_title, directory){
# Sales (log(d2))
s <- reg_model_logged(reg_data, "sales", indep_climate_var)
s_se <- sqrt(diag(vcovHC(s, type = "HC1", cluster = ~reg_data$sector)))
# Productivity (log(d2/l1))
spw <- reg_model_logged(reg_data, "sales_per_worker", indep_climate_var)
spw_se <- sqrt(diag(vcovHC(s, type = "HC1", cluster = ~reg_data$sector)))
# Wages (log(n2a))
w <- reg_model_logged(reg_data, "wages", indep_climate_var)
w_se <- sqrt(diag(vcovHC(w, type = "HC1", cluster = ~reg_data$sector)))
# Employment (log(l1))
e <- reg_model_logged(reg_data, "workers", indep_climate_var)
e_se <- sqrt(diag(vcovHC(e, type = "HC1", cluster = ~reg_data$sector)))
# Capital utilization (f1)
capu <- reg_model_logged(reg_data, "capital_utilization", indep_climate_var)
capu_se <- sqrt(diag(vcovHC(capu, type = "HC1", cluster = ~reg_data$sector)))
# Power outages (c6)
pwr <- reg_model_not_logged(reg_data, "power_outages", indep_climate_var)
pwr_se <- sqrt(diag(vcovHC(pwr, type = "HC1", cluster = ~reg_data$sector)))
# Energy intensity (n2b / d2)
ei <- reg_model_logged(reg_data, "energy_intensity", indep_climate_var)
ei_se <- sqrt(diag(vcovHC(ei, type = "HC1", cluster = ~reg_data$sector)))
# Investment in fixed assets (k4)
inv <- reg_model_not_logged(reg_data, "invest_fixed_assets_dummy", indep_climate_var)
inv_se <- sqrt(diag(vcovHC(inv, type = "HC1", cluster = ~reg_data$sector)))
# Generate the regression results table
stargazer(s, spw, w, e, capu, pwr, ei, inv,
type = "html",
se = c(list(s_se), list(spw_se), list(w_se), list(e_se), list(capu_se), list(pwr_se), list(ei_se), list(inv_se)),
out = directory,
title = paste0("Effect of Deviation in ", table_title, " from Long-Run Mean on Firm Performance"),
dep.var.labels = c("Sales (log)", "Productivity (log)", "Wages (log)",
"Employment (log)", "Capital Utilization (log)",
"Power Outages", "Energy Intensity (log)", "Investment in Fixed Assets"),
omit.stat = c("f", "ser"),
align = TRUE,
no.space = TRUE)
}
# -------------------------- EXPORT FUNCTIONS ----------------------------------
#' This function exports charts showing results from the regressions of firm outcomes on climate variables.
#' @param data Regression-ready dataset prepared by 1_prep_reg_data.
#' @param output_directory Folder path for where charts will be saved.
#' @return One chart for heat days, one for temperature, and one for temperature volatility.
#' @note Remember to use forward slashes "/" in the folder path provided.
#' @export
climate_on_firm_regs_charts <- function(data, output_directory){
hd_plot <- reg_chart_function(data, "heat_days_deviation", "Number of Heat Days", paste0())
temp_plot <- reg_chart_function(data, "temp_deviation", "Temperature")
tempvol_plot <- reg_chart_function(data, "tempvolatility_deviation", "Temperature Volatility")
# Ensure the output directory exists
if (!dir.exists(output_directory)) {
dir.create(output_directory, recursive = TRUE)
}
# Define file paths for each plot
hd_plot_path <- file.path(output_directory, "heat_days_plot.png")
temp_plot_path <- file.path(output_directory, "temperature_plot.png")
tempvol_plot_path <- file.path(output_directory, "temperature_volatility_plot.png")
# Save the plots
ggsave(hd_plot_path, plot = hd_plot, width = 12, height = 7, bg = "white")
ggsave(temp_plot_path, plot = temp_plot, width = 12, height = 7, bg = "white")
ggsave(tempvol_plot_path, plot = tempvol_plot, width = 12, height = 7, bg = "white")
}
#' This function exports tables showing results from the regressions of firm outcomes on climate variables.
#' @param data Regression-ready dataset prepared by 1_prep_reg_data.
#' @param output_directory Folder path for where tables will be saved.
#' @return One table for heat days, one for temperature, and one for temperature volatility.
#' @note Remember to use forward slashes "/" in the folder path provided.
#' @export
climate_on_firm_regs_tables <- function(data, output_directory){
hd_table <- reg_table(data, "heat_days_deviation", "Number of Heat Days", paste0(output_directory, "/heat_days_table.html"))
temp_table <- reg_table(data, "temp_deviation", "Temperature", paste0(output_directory, "/temp_table.html"))
tempvol_table <- reg_table(data, "tempvol_deviation", "Temperature Volatility", paste0(output_directory, "/tempvol_table.html"))
}
climate_on_firm_regs_tables(reg_master, "C:/Users/young/OneDrive/Documents/HomeVidsPhotos")
library(stargazer)
climate_on_firm_regs_tables(reg_master, "C:/Users/young/OneDrive/Documents/HomeVidsPhotos")
#' This function exports tables showing results from the regressions of firm outcomes on climate variables.
#' @param data Regression-ready dataset prepared by 1_prep_reg_data.
#' @param output_directory Folder path for where tables will be saved.
#' @return One table for heat days, one for temperature, and one for temperature volatility.
#' @note Remember to use forward slashes "/" in the folder path provided.
#' @export
climate_on_firm_regs_tables <- function(data, output_directory){
hd_table <- reg_table(data, "heat_days_deviation", "Number of Heat Days", paste0(output_directory, "/heat_days_table.html"))
temp_table <- reg_table(data, "temp_deviation", "Temperature", paste0(output_directory, "/temp_table.html"))
tempvol_table <- reg_table(data, "tempvolatility_deviation", "Temperature Volatility", paste0(output_directory, "/tempvol_table.html"))
}
climate_on_firm_regs_tables(reg_master, "C:/Users/young/OneDrive/Documents/HomeVidsPhotos")
# Interaction regression function takes firm outcome (e.g. revenue),
# climate variable (e.g. temperature) and list of firm characteristics/policy vars
# (e.g. size, age) as inputs. Produces stargazer table collecting all regressions.
# Internal interaction regression function
interaction_reg <- function(firm_outcome, climate_var, firm_characteristic){
# Build the formula: log(sales) = climate_var + firm_characteristic + climate_var:firm_characteristic + sector + region
formula <- as.formula(paste(firm_outcome, " ~ ", climate_var, " + ", firm_characteristic, " + ", climate_var, ":", firm_characteristic, " + sector"))
# Run the regression
model <- lm(formula,
data = reg_master)
return(model)
}
interaction_reg_table <- function(firm_outcome, climate_var, firm_characteristics, output_directory){
# Initialize an empty list to store the models
models <- list()
# Loop through each firm characteristic in the list
for (characteristic in firm_characteristics) {
model <- interaction_reg(firm_outcome, climate_var, characteristic)
models[[characteristic]] <- model
}
# Use stargazer to combine all models into a results table
stargazer(models, type = "text", title = "Regression Results - Interactions", out = output_directory)
}
View(reg_master)
interaction_reg_table("log(sales)", "heat_days_deviation", c("size", "obstacle_accesstofinance"), "C:/Users/young/OneDrive/Documents/HomeVidsPhotos/blatable.html")
colnames(reg_master)
# Main script: run all functions, 1 through 3, on the data to produce standardized
# output for the survey supplied.
# Load libraries
library(haven)
library(dplyr)
library(stargazer)
library(devtools)
# Load my package
load_all("C:/Users/young/OneDrive/Documents/wbfirmadaptation")
# Prep data
# Prep data
?wbfirmadaptation::prep_reg_data()
# Prep data
wbfirmadaptation::prep_reg_data("C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data", "Mozambique2018")
document("C:/Users/young/OneDrive/Documents/wbfirmadaptation")
# Prep data
wbfirmadaptation::prep_reg_data("C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data", "Mozambique2018")
# Load my package
load_all("C:/Users/young/OneDrive/Documents/wbfirmadaptation")
# Load libraries
library(haven)
library(dplyr)
library(stargazer)
library(devtools)
# Load my package
load_all("C:/Users/young/OneDrive/Documents/wbfirmadaptation")
# Prep data
wbfirmadaptation::prep_reg_data("C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data", "Mozambique2018")
# Prep data
wbfirmadaptation::prep_reg_data("C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data", "Mozambique2018")
# Climate on firm
wbfirmadaptation::climate_on_firm_regs_charts(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data")
# Climate on firm
wbfirmadaptation::climate_on_firm_regs_charts(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data")
# Load libraries
library(haven)
library(dplyr)
library(stargazer)
library(devtools)
# Load my package
load_all("C:/Users/young/OneDrive/Documents/wbfirmadaptation")
# Prep data
reg_data <- wbfirmadaptation::prep_reg_data("C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data", "Mozambique2018")
# Climate on firm
wbfirmadaptation::climate_on_firm_regs_charts(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data")
?paste0
# Main script: run all functions, 1 through 3, on the data to produce standardized
# output for the survey supplied.
# Load libraries
library(haven)
library(dplyr)
library(stargazer)
library(devtools)
# Load my package
load_all("C:/Users/young/OneDrive/Documents/wbfirmadaptation")
# Prep data
reg_data <- wbfirmadaptation::prep_reg_data("C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data", "Mozambique2018")
# Climate on firm
wbfirmadaptation::climate_on_firm_regs_charts(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data")
load("~/wbfirmadaptation/raw_data/master.dta")
bla <- haven::read_dta("~/wbfirmadaptation/raw_data/master.dta")
View(bla)
# Main script: run all functions, 1 through 3, on the data to produce standardized
# output for the survey supplied.
# Load libraries
library(haven)
library(dplyr)
library(stargazer)
library(devtools)
# Load my package
load_all("C:/Users/young/OneDrive/Documents/wbfirmadaptation")
# Prep data
reg_data <- wbfirmadaptation::prep_reg_data("C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data", "Mozambique2018")
# Climate on firm
wbfirmadaptation::climate_on_firm_regs_charts(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data")
wbfirmadaptation::climate_on_firm_regs_tables(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data")
unique(bla$country)
# Main script: run all functions, 1 through 3, on the data to produce standardized
# output for the survey supplied.
# Load libraries
library(haven)
library(dplyr)
library(stargazer)
library(devtools)
# Load my package
load_all("C:/Users/young/OneDrive/Documents/wbfirmadaptation")
# Prep data
reg_data <- wbfirmadaptation::prep_reg_data("C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data", "Mexico2023")
# Climate on firm
wbfirmadaptation::climate_on_firm_regs_charts(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data")
wbfirmadaptation::climate_on_firm_regs_tables(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data")
# Main script: run all functions, 1 through 3, on the data to produce standardized
# output for the survey supplied.
# Load libraries
library(haven)
library(dplyr)
library(stargazer)
library(devtools)
# Load my package
load_all("C:/Users/young/OneDrive/Documents/wbfirmadaptation")
# Prep data
reg_data <- wbfirmadaptation::prep_reg_data("C:/Users/young/OneDrive/Documents/wbfirmadaptation/raw_data", "Bangladesh2022")
# Climate on firm
wbfirmadaptation::climate_on_firm_regs_charts(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/test_output")
wbfirmadaptation::climate_on_firm_regs_tables(reg_data, "C:/Users/young/OneDrive/Documents/wbfirmadaptation/test_output")
# Interactions
wbfirmadaptation::interaction_reg_table(reg_data, "log(sales)", "heat_days_deviation",
c("young", "small", "obstacle_accesstofinance",
"C:/Users/young/OneDrive/Documents/wbfirmadaptation/test_output/test_table.html"))
# Interactions
wbfirmadaptation::interaction_reg_table(reg_data, "log(sales)", "heat_days_deviation",
c("young", "small", "obstacle_accesstofinance"),
"C:/Users/young/OneDrive/Documents/wbfirmadaptation/test_output/test_table.html")
devtools::document(wb-firm-adaptation-tool)
devtools::document()
devtools::build()
devtools::document()
devtools::build()
